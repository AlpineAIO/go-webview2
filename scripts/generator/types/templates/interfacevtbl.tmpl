//go:build windows

package {{.PackageName}}

{{- if .Includes }}
import (
{{- range .Includes}}
	{{.}}
{{- end}}
)
{{- end}}

type {{.Name}}Vtbl struct {
	IUnknownVtbl
	{{- range .Methods}}
	{{.ProcessedName}} ComProc
	{{- end}}
}

type {{.Name}} struct {
	Vtbl *{{.Name}}Vtbl
	{{- if .HasInvokeMethod }}
	impl {{.Name}}Impl
	{{- end}}
}

func (i *{{.Name}}) AddRef() uintptr {
	refCounter, _, _ := i.Vtbl.AddRef.Call(uintptr(unsafe.Pointer(i)))
	return refCounter
}

{{if .BaseClass }}
func (i *ICoreWebView2) Get{{.Name}}() *{{.Name}} {
	var result *{{.Name}}

	iid{{.Name}} := NewGUID({{.Header.AsString}})
	_, _, _ = i.Vtbl.QueryInterface.Call(
		uintptr(unsafe.Pointer(i)),
		uintptr(unsafe.Pointer(iid{{.Name}})),
		uintptr(unsafe.Pointer(&result)))

	return result
}

{{end}}